version: '3'

vars:
  # proto 코드 생성 경로
  PROTO_GEN_PATH: ./gen
  PROTO_GEN_GO: "{{.PROTO_GEN_PATH}}/go"
  PROTO_GEN_PYTHON: "{{.PROTO_GEN_PATH}}/python"

  # proto 옵션
  PROTO_OPT_PROTO_PATH: --proto_path=./proto
  PROTO_OPT_GO_OUT: --go_out={{.PROTO_GEN_GO}}
  PROTO_OPT_GO_PATH: --go_opt=paths=source_relative
  PROTO_OPT_GO_GRPC_OUT: --go-grpc_out={{.PROTO_GEN_GO}}
  PROTO_OPT_GO_GRPC_PATH: --go-grpc_opt=paths=source_relative
  PROTO_OPT_PYTHON_OUT: --python_out={{.PROTO_GEN_PYTHON}}
  PROTO_OPT_PYTHON_GRPC_OUT: --grpc_python_out={{.PROTO_GEN_PYTHON}}
  PROTO_OPT_PYI_OUT: --pyi_out={{.PROTO_GEN_PYTHON}}

tasks:
  proto-files:
    desc: "List all proto files"
    cmds:
      - find ./proto -name "*.proto"

  proto-gen:
    desc: "Generate protocol buffer code"
    silent: true
    vars:
      PROTO_FILES:
        sh: task proto-files
    cmds:
      - mkdir -p {{.PROTO_GEN_GO}}
      - mkdir -p {{.PROTO_GEN_PYTHON}}
      - for:
          var: PROTO_FILES
          split: "\n"
        cmd: |
          echo "Generating code for {{.ITEM}}"
          protoc {{.PROTO_OPT_PROTO_PATH}} {{.PROTO_OPT_GO_OUT}} {{.PROTO_OPT_GO_PATH}} {{.PROTO_OPT_GO_GRPC_OUT}} {{.PROTO_OPT_GO_GRPC_PATH}} {{.ITEM}}
          python3 -m grpc_tools.protoc {{.PROTO_OPT_PROTO_PATH}} {{.PROTO_OPT_PYTHON_OUT}} {{.PROTO_OPT_PYTHON_GRPC_OUT}} {{.PROTO_OPT_PYI_OUT}} {{.ITEM}}

  proto-clean:
    desc: "Clean generated proto code"
    cmds:
      - rm -rf {{.PROTO_GEN_PATH}}

  build-prototype:
    desc: "Build prototype binary"
    cmds:
      - go build -o ./bin/ ./cmd/prototype

  build-collector:
    desc: "Build collector binary"
    cmds:
      - go build -o ./bin/ ./cmd/collector

  clean:
    desc: "Clean build artifacts"
    cmds:
      - rm -rf ./bin
