apiVersion: v1
kind: Service
metadata:
  name: sparse-retrieval-service
  labels:
    app.kubernetes.io/name: sparse-retrieval
    app.kubernetes.io/component: backend
spec:
  type: ClusterIP
  selector:
    app: sparse-retrieval
  ports:
  - protocol: TCP
    port: 50051
    targetPort: 50051
    name: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sparse-retrieval-deployment
  labels:
    app.kubernetes.io/name: sparse-retrieval
    app.kubernetes.io/component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sparse-retrieval
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: sparse-retrieval
    spec:
      containers:
      - name: sparse-retrieval
        image: sparse-retrieval:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 50051
          protocol: TCP
          name: grpc
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        env:
        - name: GRPC_PORT
          value: "50051"
        - name: QDRANT_HOST
          valueFrom:
            configMapKeyRef:
              name: retrieval-configmap
              key: qdrant-host
        - name: QDRANT_PORT
          valueFrom:
            configMapKeyRef:
              name: retrieval-configmap
              key: qdrant-port
        - name: COLLECTION_NAME
          valueFrom:
            configMapKeyRef:
              name: retrieval-configmap
              key: collection-name
        - name: MAX_WORKERS
          value: "10"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PYTHONDONTWRITEBYTECODE
          value: "1"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import grpc; channel = grpc.insecure_channel('localhost:50051'); channel.close()"
          initialDelaySeconds: 40
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import grpc; channel = grpc.insecure_channel('localhost:50051'); channel.close()"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
